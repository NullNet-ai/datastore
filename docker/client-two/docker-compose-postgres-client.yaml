version: '3.9'

services:
  # TimescaleDB Service
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb_client-two
    ports:
      - "5434:5432" # Expose PostgreSQL on port 5432
    environment:
      POSTGRES_USER: admin         # Database user
      POSTGRES_PASSWORD: admin     # Database password
      POSTGRES_DB: client-two         # Initial database name
#    volumes:
#      - timescale-data:/var/lib/postgresql/data
    restart: always

  # NestJS Application Service
  nestjs-app:
    image: kashanalikhalid/datastore-postgres:latest   # Replace with your Docker Hub image
    container_name: nestjs_app-client_two
    depends_on:
      - timescaledb                # Waits for TimescaleDB to be ready
    ports:
      - "5002:5002"                # Expose NestJS app on port 5001
    environment:
      - PORT=5002
      - SYNC_ENABLED=false
      - SYNC_ENDPOINT=http://localhost:5000
      - GROUP_ID=g2
      - SYNC_TIMER_MS=5001
      - DATABASE_URL=postgres://admin:admin@timescaledb:5432/client-two
      - DB_HOST=timescaledb        # TimescaleDB container hostname
      - DB_NAME=client-two
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_PORT=5432
      - DB_FILE_DIR='sql'
      - DB_FILE_SQLITE='sqlite.db'
      - NODE_ENV=local
      - DEBUG=false
      - STORAGE_UPLOAD_PATH=./upload
      - STORAGE_ENDPOINT=10.110.100.1
      - STORAGE_PORT=9000
      - STORAGE_ACCESS_KEY=0eYyLxBNBFdQlXly6E8F
      - STORAGE_SECRET_KEY=ZQ5PAdvYgj0iakLpocXTT4Eg5Rxs6muap2hwduL2
      - STORAGE_BUCKET_NAME=test
      - STORAGE_REGION=us-east-1
      - STORAGE_TIMEOUT=10000
      - SSL_CA=path/to/ca.cert
      - SSL_CERT=path/to/cert.cert
      - SSL_SECRET_KEY=path/to/secret.key
      - STORAGE_TRANSPORT_KEEPALIVE=false
      - COMPANY_ORGANIZATION_ID=org-company-id-1
      - COMPANY_ORGANIZATION_NAME=org-company

volumes:
  timescale-data:
